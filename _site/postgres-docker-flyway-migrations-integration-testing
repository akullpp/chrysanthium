<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Postgres Docker image with Flyway migrations for integration testing || Chrysanthium</title>
    <link rel="stylesheet" href="/css/index.css">
    <link rel="stylesheet" href="/css/post.css">
    <link rel="stylesheet" href="/css/tomorrow.css">
  </head>

  <body>
    <header class="navigation">
      <ul>
        <li>
          <a href="/">Blog</a>
        </li>

        <li>
          <a href="/about">About</a>
        </li>
      </ul>
    </header>

    <h1>Postgres Docker image with Flyway migrations for integration testing</h1>
    
      <h6>Last modified 2023/11</h6>
      

    <p>Here's how you set up a Docker image of a PostgreSQL database with migrations (and possibly test data) applied by Flyway - often for integration testing.</p>
<hr>
<p><a href="https://github.com/akullpp/postgres-docker-flyway-migrations-integration-testing">Source on GitHub</a></p>
<hr>
<p>Assume following folder structure:</p>
<pre class="language-txt"><code class="language-txt">sql/
  V1__foo.sql
  V2__bar.sql
  V3__baz.sql
20_flyway.sh
Dockerfile
flyway.conf</code></pre>
<p>Ensure to do a <code>sudo chmod a+x 20_flyway.sh</code>. The content of the shell script:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> errexit
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> pipefail
<span class="token builtin class-name">set</span> <span class="token parameter variable">-o</span> nounset

flyway <span class="token parameter variable">-jdbcProperties.socketFactory</span><span class="token operator">=</span><span class="token string">'org.newsclub.net.unix.AFUNIXSocketFactory$FactoryArg'</span> <span class="token parameter variable">-jdbcProperties.socketFactoryArg</span><span class="token operator">=</span>/var/run/postgresql/.s.PGSQL.5432 <span class="token parameter variable">-jdbcProperties.sslMode</span><span class="token operator">=</span>disable migrate</code></pre>
<p>Order of things are important, don't try to change anything.</p>
<p>We must switch out the class responsible for connecting to Postgres because during startup of the temporary database <strong>only unix sockets</strong> and no TCP is available. For this purpose we will later download a specific driver.</p>
<p>The <code>flyway.conf</code> I'm going to use is unspectacular:</p>
<pre class="language-ini"><code class="language-ini"><span class="token key attr-name">flyway.locations</span><span class="token punctuation">=</span><span class="token value attr-value">filesystem:sql</span>
<span class="token key attr-name">flyway.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:postgresql://:5432/platform</span>
<span class="token key attr-name">flyway.password</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span>
<span class="token key attr-name">flyway.user</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span>
<span class="token key attr-name">flyway.connectRetries</span><span class="token punctuation">=</span><span class="token value attr-value">60</span></code></pre>
<p>And finally the <code>Dockerfile</code>:</p>
<pre class="language-docker"><code class="language-docker"><span class="token comment"># I'll use PostGIS as base image but you can also do this with the official one.</span>
<span class="token instruction"><span class="token keyword">FROM</span> postgis/postgis:13-master</span>

<span class="token comment"># We download Flyway and install it, nothing special.</span>
<span class="token instruction"><span class="token keyword">ADD</span> https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.15.0/flyway-commandline-9.15.0-linux-x64.tar.gz /flyway.tar.gz</span>
<span class="token instruction"><span class="token keyword">RUN</span> tar xvf /flyway.tar.gz</span>
<span class="token instruction"><span class="token keyword">RUN</span> mv flyway-9.15.0 flyway</span>
<span class="token instruction"><span class="token keyword">RUN</span> chmod +x /flyway/flyway</span>
<span class="token instruction"><span class="token keyword">RUN</span> ln -s /flyway/flyway /usr/local/bin/flyway</span>

<span class="token comment"># We download the driver for unix sockets and place it in Flyway's driver folder.</span>
<span class="token instruction"><span class="token keyword">ADD</span> https://github.com/kohlschutter/junixsocket/releases/download/junixsocket-2.6.2/junixsocket-dist-2.6.2-bin.tar.gz /junixsocket.tar.gz</span>
<span class="token instruction"><span class="token keyword">RUN</span> tar xvf /junixsocket.tar.gz</span>
<span class="token instruction"><span class="token keyword">RUN</span> mv /junixsocket-dist-2.6.2/lib/junixsocket-common-2.6.2.jar /flyway/drivers/junixsocket-common-2.6.2.jar</span>
<span class="token instruction"><span class="token keyword">RUN</span> mv /junixsocket-dist-2.6.2/lib/junixsocket-native-common-2.6.2.jar /flyway/drivers/junixsocket-native-common-2.6.2.jar</span>

<span class="token comment"># We copy the script to the `docker-entrypoint-initdb.d`.</span>
<span class="token comment"># Shell scripts in this folder will get executed on startup.</span>
<span class="token comment"># Do mind the integer prefix of the file if order is important.</span>
<span class="token comment"># I prefixed it with `20` because PostGIS uses `10` and my SQL relies on it.</span>
<span class="token instruction"><span class="token keyword">COPY</span> 20_flyway.sh /docker-entrypoint-initdb.d/20_flyway.sh</span>
<span class="token instruction"><span class="token keyword">RUN</span> chmod +x /docker-entrypoint-initdb.d/20_flyway.sh</span>

<span class="token comment"># Copy Flyway configuration</span>
<span class="token instruction"><span class="token keyword">COPY</span> flyway.conf /flyway.conf</span>

<span class="token comment"># Copy SQL files</span>
<span class="token instruction"><span class="token keyword">COPY</span> sql /sql</span></code></pre>
<p>For building and running nothing special is required:</p>
<pre class="language-shell"><code class="language-shell"><span class="token function">docker</span> build <span class="token builtin class-name">.</span> <span class="token parameter variable">-t</span> foobar
<span class="token function">docker</span> run <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_USER</span><span class="token operator">=</span>admin <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span>admin <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_DB</span><span class="token operator">=</span>platform <span class="token parameter variable">-p</span> <span class="token number">5432</span>:5432 foobar</code></pre>


    <footer class="navigation">
      <ul>
        <li>
          <a href="/privacy">Privacy</a>
        </li>

        <li>
          <a href="/legal">Legal</a>
        </li>
      </ul>
    </footer>
  </body>
</html>
